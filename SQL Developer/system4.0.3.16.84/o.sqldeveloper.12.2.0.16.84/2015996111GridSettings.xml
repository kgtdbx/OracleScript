<?xml version = '1.0' encoding = 'UTF-8'?>
<TableSettings class="oracle.dbtools.raptor.controls.grid.RaptorGridPersistedSettings" xmlns="http://xmlns.oracle.com/jdeveloper/110000/Table-attributes">
   <columnPositions class="java.util.ArrayList">
      <Item class="java.lang.String">REFERENCE_DATE</Item>
      <Item class="java.lang.String">AGREEMENT_ID</Item>
      <Item class="java.lang.String">HOST_AGREEMENT_NUM</Item>
      <Item class="java.lang.String">AGREEMENT_NAME_TXT</Item>
      <Item class="java.lang.String">SOURCE_SYSTEM_CD</Item>
      <Item class="java.lang.String">FINANCIAL_AGREEMENT_TYPE_CD</Item>
      <Item class="java.lang.String">FINANCIAL_AGREEMENT_SUBTYPE_CD</Item>
      <Item class="java.lang.String">BINDING_FEATURE_CD</Item>
      <Item class="java.lang.String">NOTICE_FEATURE_CD</Item>
      <Item class="java.lang.String">BINDING_TIME_PERIOD_CD</Item>
      <Item class="java.lang.String">BINDING_TIME_PERIOD_CNT</Item>
      <Item class="java.lang.String">NOTICE_TIME_PERIOD_CD</Item>
      <Item class="java.lang.String">NOTICE_TIME_PERIOD_CNT</Item>
      <Item class="java.lang.String">LEGAL_COLLECTION_IND</Item>
      <Item class="java.lang.String">LEGAL_COUNSEL_CODE</Item>
      <Item class="java.lang.String">PAWNED_IND</Item>
      <Item class="java.lang.String">WITHDRAWAL_BLOCKED_IND</Item>
      <Item class="java.lang.String">ACTIVE_IND</Item>
      <Item class="java.lang.String">BRANCH_CD</Item>
      <Item class="java.lang.String">PROFIT_CENTER_CD</Item>
      <Item class="java.lang.String">VALUE_DT</Item>
      <Item class="java.lang.String">OPEN_DT</Item>
      <Item class="java.lang.String">CLOSE_DT</Item>
      <Item class="java.lang.String">ORIGINAL_MATURITY_DT</Item>
      <Item class="java.lang.String">OWNER_PARTY_ID</Item>
      <Item class="java.lang.String">OWNER_PARTY_SSN</Item>
      <Item class="java.lang.String">CURRENCY_CD</Item>
      <Item class="java.lang.String">CURRENCY_RT</Item>
      <Item class="java.lang.String">ISB_CURRENCY_RT</Item>
      <Item class="java.lang.String">CURRENCY_TYPE_CD</Item>
      <Item class="java.lang.String">HOST_PRODUCT_NUM</Item>
      <Item class="java.lang.String">PRODUCT_ID</Item>
      <Item class="java.lang.String">PRODUCT_NAME_TXT</Item>
      <Item class="java.lang.String">DESIGNATED_ACCOUNT_NAME_TXT</Item>
      <Item class="java.lang.String">PV_FEATURE_GROUP_ID</Item>
      <Item class="java.lang.String">LOAN_TYPE</Item>
      <Item class="java.lang.String">DAY_COUNT_BASIS_CD</Item>
      <Item class="java.lang.String">VALUE_DATE_RULE_CD</Item>
      <Item class="java.lang.String">PRICING_METHOD_SUBTYPE_CD</Item>
      <Item class="java.lang.String">TIER_NO</Item>
      <Item class="java.lang.String">DEPOSIT_INTEREST_RT</Item>
      <Item class="java.lang.String">LOAN_INTEREST_RT</Item>
      <Item class="java.lang.String">INTEREST_RT</Item>
      <Item class="java.lang.String">BASE_RT</Item>
      <Item class="java.lang.String">FUNDING_MARGIN_RT</Item>
      <Item class="java.lang.String">BUSINESS_UNIT_MARGIN_RT</Item>
      <Item class="java.lang.String">TOTAL_MARGIN_RT</Item>
      <Item class="java.lang.String">INDEXATION_RT</Item>
      <Item class="java.lang.String">INTEREST_FIX_FLO_CD</Item>
      <Item class="java.lang.String">INTEREST_BEFORE_AFTER_CD</Item>
      <Item class="java.lang.String">INT_COMPOUNDING_PERIOD_TYPE_CD</Item>
      <Item class="java.lang.String">ACCRUED_DEPOSIT_INT_AMT</Item>
      <Item class="java.lang.String">ACCRUED_DEPOSIT_INT_AC_AMT</Item>
      <Item class="java.lang.String">ACCRUED_LOAN_INT_AMT</Item>
      <Item class="java.lang.String">ACCRUED_LOAN_INT_AC_AMT</Item>
      <Item class="java.lang.String">ACCRUED_INDEXATION_AC_AMT</Item>
      <Item class="java.lang.String">ACCRUED_INDEXATION_AMT</Item>
      <Item class="java.lang.String">BALANCE_SRC_AMT</Item>
      <Item class="java.lang.String">BALANCE_SRC_AC_AMT</Item>
      <Item class="java.lang.String">BALANCE_AMT</Item>
      <Item class="java.lang.String">BALANCE_AC_AMT</Item>
      <Item class="java.lang.String">IN_ARREARS_AC_AMT</Item>
      <Item class="java.lang.String">IN_ARREARS_AMT</Item>
      <Item class="java.lang.String">DAYS_IN_ARREARS_CNT</Item>
      <Item class="java.lang.String">IN_ARREARS_DT</Item>
      <Item class="java.lang.String">NSF_AC_AMT</Item>
      <Item class="java.lang.String">NSF_AMT</Item>
      <Item class="java.lang.String">NSF_COST_AC_AMT</Item>
      <Item class="java.lang.String">NSF_COST_AMT</Item>
      <Item class="java.lang.String">PENALTY_INTEREST_AC_AMT</Item>
      <Item class="java.lang.String">PENALTY_INTEREST_AMT</Item>
      <Item class="java.lang.String">OVERDRAFT_LIMIT_AMT</Item>
      <Item class="java.lang.String">OVERDRAFT_LIMIT_AC_AMT</Item>
      <Item class="java.lang.String">OVERDRAFT_LIMIT_START_DT</Item>
      <Item class="java.lang.String">OVERDRAFT_LIMIT_END_DT</Item>
      <Item class="java.lang.String">AVAILABLE_AMT</Item>
      <Item class="java.lang.String">AVAILABLE_AC_AMT</Item>
      <Item class="java.lang.String">DISPOSABLE_AMT</Item>
      <Item class="java.lang.String">DISPOSABLE_AC_AMT</Item>
      <Item class="java.lang.String">EXPOSURE_AMT</Item>
      <Item class="java.lang.String">EXPOSURE_AC_AMT</Item>
      <Item class="java.lang.String">LAST_TRANSACTION_DT</Item>
      <Item class="java.lang.String">LATEST_MOVEMENT_DT</Item>
      <Item class="java.lang.String">YTD_WITHDRAWAL_CNT</Item>
      <Item class="java.lang.String">YTD_WITHDRAWAL_AC_AMT</Item>
      <Item class="java.lang.String">YTD_DEPOSIT_CNT</Item>
      <Item class="java.lang.String">YTD_DEPOSIT_TURNOVER_AC_AMT</Item>
   </columnPositions>
   <columnWidths>
      <Item>109</Item>
      <Item>96</Item>
      <Item>140</Item>
      <Item>137</Item>
      <Item>124</Item>
      <Item>189</Item>
      <Item>208</Item>
      <Item>132</Item>
      <Item>128</Item>
      <Item>155</Item>
      <Item>161</Item>
      <Item>151</Item>
      <Item>157</Item>
      <Item>142</Item>
      <Item>135</Item>
      <Item>86</Item>
      <Item>164</Item>
      <Item>79</Item>
      <Item>80</Item>
      <Item>121</Item>
      <Item>69</Item>
      <Item>68</Item>
      <Item>70</Item>
      <Item>144</Item>
      <Item>112</Item>
      <Item>120</Item>
      <Item>93</Item>
      <Item>92</Item>
      <Item>114</Item>
      <Item>123</Item>
      <Item>128</Item>
      <Item>84</Item>
      <Item>390</Item>
      <Item>195</Item>
      <Item>140</Item>
      <Item>173</Item>
      <Item>135</Item>
      <Item>133</Item>
      <Item>178</Item>
      <Item>63</Item>
      <Item>135</Item>
      <Item>119</Item>
      <Item>86</Item>
      <Item>63</Item>
      <Item>129</Item>
      <Item>162</Item>
      <Item>116</Item>
      <Item>100</Item>
      <Item>134</Item>
      <Item>170</Item>
      <Item>212</Item>
      <Item>166</Item>
      <Item>186</Item>
      <Item>150</Item>
      <Item>170</Item>
      <Item>182</Item>
      <Item>162</Item>
      <Item>117</Item>
      <Item>137</Item>
      <Item>91</Item>
      <Item>111</Item>
      <Item>130</Item>
      <Item>110</Item>
      <Item>141</Item>
      <Item>102</Item>
      <Item>85</Item>
      <Item>65</Item>
      <Item>118</Item>
      <Item>98</Item>
      <Item>163</Item>
      <Item>143</Item>
      <Item>139</Item>
      <Item>159</Item>
      <Item>169</Item>
      <Item>157</Item>
      <Item>99</Item>
      <Item>119</Item>
      <Item>107</Item>
      <Item>127</Item>
      <Item>98</Item>
      <Item>118</Item>
      <Item>140</Item>
      <Item>135</Item>
      <Item>140</Item>
      <Item>161</Item>
      <Item>113</Item>
      <Item>194</Item>
   </columnWidths>
   <searchParams class="java.util.ArrayList"/>
   <sortClauses>
      <Item/>
   </sortClauses>
   <uniqueName>IdeConnections%23VHGTEST_DEPOSITSWITH DEPOSIT_AGREEMENTS_W_Level0 AS 
( 
    select 
        a.reference_date, 
        decode(a.is_active,1,'YES','0','NO',null) as ACTIVE_IND, 
        case when a_id.agreement_id is null then utils.agreementId(a.agreement_id) else a_id.agreement_id end as agreement_id, 
        a.designated_name, 
        a.agreement_id as HOST_AGREEMENT_NUM, 
        legal_counsel_code, 
 
        case when (notification_code = '26' and a.source_system_code = 'AH') 
                  or (savings_book_status_code = '4' and a.source_system_code = 'SP') 
        then 'YES' 
        else 'NO' 
        end as PAWNED_IND, 
        case when da.is_withdrawal_blocked=1 then 'YES' else 'NO' end withdrawal_blocked_ind, 
 
        bp.bp_master_id as OWNER_PARTY_ID, 
        bp.ssn as OWNER_PARTY_SSN, 
        decode(bp.bp_type,1,'INDIVIDUAL',2,'ORGANIZATION',null) as OWNER_PARTY_TYPE_CD, 
        utils.SourceSystemCd(p.code,substr(a.agreement_id,7,1),a.branch,a.source_system_code) as SOURCE_SYSTEM_CD, 
        a.branch, 
        a.entity, 
        a.status_date as VALUE_DT, 
        case when a.commencement_date=date'1973-03-23' then null else a.commencement_date end as OPEN_DT, 
        case when balance &lt; 0 then 'ASSET' else 'LIABILITY' end as ASSET_LIABILITY_CD, 
        a.closing_date as CLOSE_DT, 
        case when c.currency_code = 'XXX' and substr(a.agreement_id,-2,2) = '29' then 'TRY' else c.currency_code end as CURRENCY_CD, 
        case when c.currency_code = 'ISK' then decode(a.is_indexed,1,'VTR',0,'Ã“VT','???') else 'GTR' end  as CURRENCY_TYPE_CD, 
 
        
        (select case when utils.SourceSystemCd(p.code,substr(a.agreement_id,7,1),a.branch,a.source_system_code) &lt;> 29 then substr(p.code,0,2) else p.code end from dual) as HOST_PRODUCT_NUM, 
        (select utils.CurrencyRt('CB',c.currency_code,a.reference_date) from dual) as CURRENCY_RT, 
        (select utils.CurrencyRt('ISB',c.currency_code,a.reference_date) from dual) as ISB_CURRENCY_RT, 
          case when utils.SourceSystemCd(p.code,substr(a.agreement_id,7,1),a.branch,a.source_system_code) &lt;> 29 then 
        ( 
            select utils.productId( 
            case when bp.internal_unit = 'Yes' then 'INTERNAL' else substr(p.code,0,2) end, 
            utils.SourceSystemCd(p.code,substr(a.agreement_id,7,1),a.branch,a.source_system_code), 
            CASE WHEN c.currency_code = 'ISK' then decode(a.is_indexed,1,'VTR',0,'Ã“VT','???') ELSE 'GTR' END, 
            substr(a.agreement_id,5,2) 
        ) from dual) 
        when utils.SourceSystemCd(p.code,substr(a.agreement_id,7,1),a.branch,a.source_system_code) = 29 then 
                case when bp.internal_unit = 'Yes' then  (select utils.productIdWithInternal(p.code,29,CASE WHEN c.currency_code = 'ISK' then decode(a.is_indexed,1,'VTR',0,'Ã“VT','???') ELSE 'GTR' END,substr(a.agreement_id,5,2)) from dual) 
                else  (select utils.productId(p.code,29,CASE WHEN c.currency_code = 'ISK' then decode(a.is_indexed,1,'VTR',0,'Ã“VT','???') ELSE 'GTR' END,substr(a.agreement_id,5,2)) from dual) end 
         end 
 
        as PRODUCT_ID, 
             case when utils.SourceSystemCd(p.code,substr(a.agreement_id,7,1),a.branch,a.source_system_code) &lt;> 29 then 
        (select utils.PvFeatureGroupId( 
            case when bp.internal_unit = 'Yes' then 'INTERNAL' 
            else substr(p.code,0,2) end, 
            utils.SourceSystemCd(p.code,substr(a.agreement_id,7,1),a.branch,a.source_system_code), 
            case when c.currency_code = 'ISK' then decode(a.is_indexed,1,'VTR',0,'Ã“VT','???') else 'GTR' end, 
            case when c.currency_code = 'XXX' and substr(a.agreement_id,-2,2) = '29' then 'TRY' else c.currency_code end, 
            decode(bp.bp_type,1,'INDIVIDUAL',2,'ORGANIZATION',null), 
            case when utils.is_number(term_d.duration)=1 then to_number(substr(RTRIM(term_d.duration),1,4))*12+to_number(substr(RTRIM(term_d.duration),5,2))*1 
            when utils.is_number(TDR.CODE)=1 then CAST(TDR.CODE as int) else null end , 
            ffc.balance, 
            null, 
            substr(a.agreement_id,5,2) 
        ) from dual) 
        when utils.SourceSystemCd(p.code,substr(a.agreement_id,7,1),a.branch,a.source_system_code) = 29 then 
                case when bp.internal_unit = 'Yes' then 
 
                ( select utils.PvFeatureGroupIdWithInternal( 
                             p.code, 
                              '29', 
                               case when c.currency_code = 'ISK' then decode(a.is_indexed,1,'VTR',0,'Ã“VT','???') else 'GTR' end, 
                                case when c.currency_code = 'XXX' and substr(a.agreement_id,-2,2) = '29' then 'TRY' else c.currency_code end, 
                                decode(bp.bp_type,1,'INDIVIDUAL',2,'ORGANIZATION',null), 
                
                     
                        
                    case when utils.is_number(term_d.duration)=1 then to_number(substr(RTRIM(term_d.duration),1,4))*12+to_number(substr(RTRIM(term_d.duration),5,2))*1 
                    when utils.is_number(TDR.CODE)=1 then CAST(TDR.CODE as int) else null end , 
                    ffc.balance, 
                    null, 
                    substr(a.agreement_id,5,2) 
                    ) from dual ) 
 
                else 
 
                ( select utils.PvFeatureGroupId( 
                             p.code, 
                              '29', 
                               case when c.currency_code = 'ISK' then decode(a.is_indexed,1,'VTR',0,'Ã“VT','???') else 'GTR' end, 
                                case when c.currency_code = 'XXX' and substr(a.agreement_id,-2,2) = '29' then 'TRY' else c.currency_code end, 
                                decode(bp.bp_type,1,'INDIVIDUAL',2,'ORGANIZATION',null), 
                
                     
                        
                    case when utils.is_number(term_d.duration)=1 then to_number(substr(RTRIM(term_d.duration),1,4))*12+to_number(substr(RTRIM(term_d.duration),5,2))*1 
                    when utils.is_number(TDR.CODE)=1 then CAST(TDR.CODE as int) else null end , 
                    ffc.balance, 
                    null, 
                    substr(a.agreement_id,5,2) 
                    ) from dual ) 
 
                 end 
 
            end 
 
        as PV_FEATURE_GROUP_ID, 
 
        case  when utils.is_number(TDR.CODE)=1 or utils.is_number(term_d.duration)=1 then 'MONTH' else decode(tdr.code,'Ã“B',null,'OR','HOLIDAY','UNKNOWN') end as BINDING_TIME_PERIOD_CD, 
              
        case when utils.is_number(term_d.duration)=1 then  case when to_number(substr(RTRIM(term_d.duration),1,4))*12+to_number(substr(RTRIM(term_d.duration),5,2))*1 &lt;= 1 then 1 
                                                            when to_number(substr(RTRIM(term_d.duration),1,4))*12+to_number(substr(RTRIM(term_d.duration),5,2))*1 &lt;= 3 then 3 
                                                            when to_number(substr(RTRIM(term_d.duration),1,4))*12+to_number(substr(RTRIM(term_d.duration),5,2))*1 &lt;= 6 then 6 
                                                             when to_number(substr(RTRIM(term_d.duration),1,4))*12+to_number(substr(RTRIM(term_d.duration),5,2))*1 &lt;= 12 then 12 
                                                            when to_number(substr(RTRIM(term_d.duration),1,4))*12+to_number(substr(RTRIM(term_d.duration),5,2))*1 &lt;= 18 then 18 
                                                            else null end 
        when utils.is_number(TDR.CODE)=1 then CAST(TDR.CODE as int) else null end as BINDING_TIME_PERIOD_CNT, 
 
        vdr.value_date_rule_cd as VALUE_DATE_RULE_CD, 
        ffc.interest_rate as DEPOSIT_INTEREST_RT, 
        ffc.debt_interest_rate as LOAN_INTEREST_RT, 
        CP_DEPOSIT_INTEREST_RT, 
        CP_LOAN_INTEREST_RT, 
 
        case when balance &lt; 0 then debt_interest_rate else interest_rate end as INTEREST_RT, 
        
        case when ffc.balance &lt; 0 then debt_interest_margin_rate else interest_margin_rate end as BUSINESS_UNIT_MARGIN_RT, 
        case when ffc.balance &lt; 0 then loan_ifc.base_interest_rate else dep_ifc.base_interest_rate end as BASE_RT, 
        case when ffc.balance &lt; 0 then 'LOAN_AGREEMENT' else 'DEPOSIT_AGREEMENT' end as FINANCIAL_AGREEMENT_SUBTYPE_CD, 
 
        dep_ifc.current_index as INDEXATION_RT, 
        a.is_indexed, 
 
        
        ffc.interest_earned as ACCRUED_DEPOSIT_INT_AC_AMT, 
        ffc.accrued_debt_interest as ACCRUED_LOAN_INT_AC_AMT, 
        ffc.accrued_indexation as ACCRUED_INDEXATION_AC_AMT, 
        ffc.accrued_interest_indexation as ACCRUED_INT_INDEXATION_AC_AMT, 
 
        ffc.balance AS BALANCE_SRC_AC_AMT, 
        (select 
        decode(utils.DoesNotDefaultInd(a_id.agreement_id),'NO', 
            utils.BalanceAmt(balance,nvl(nsf_amount,0)+nvl(nsf_cost,0)+nvl(default_interest,0),odl.overdraft_limit,decode(a.source_system_code,'AH',5,'SP',6,'IG',4,29)), 
            balance 
        ) from dual) as BALANCE_AC_AMT, 
        (select decode(utils.DoesNotDefaultInd(a_id.agreement_id),'NO', 
            utils.inArrearsAmt(balance,nvl(nsf_amount,0)+nvl(nsf_cost,0)+nvl(default_interest,0),odl.overdraft_limit,decode(a.source_system_code,'AH',5,'SP',6,'IG',4,29)), 
            0 
        ) from dual) as IN_ARREARS_AC_AMT, 
 
        
        (select decode(utils.DoesNotDefaultInd(a_id.agreement_id),'NO',utils.DaysInArrears(a.status_date, 
            CASE WHEN ffc.nsf_date IS NULL AND ffc.default_date IS NULL THEN NULL ELSE least(nvl(ffc.nsf_date,date'9000-12-31'),nvl(ffc.default_date,date'9000-12-31')) END), 
        0) from dual) as DAYS_IN_ARREARS_CNT, 
 
        (select decode(utils.DoesNotDefaultInd(a_id.agreement_id),'NO', 
            CASE WHEN ffc.nsf_date IS NULL AND ffc.default_date IS NULL THEN NULL ELSE least(nvl(ffc.nsf_date,date'9000-12-31'),nvl(ffc.default_date,date'9000-12-31'))END,null) 
        from dual) as IN_ARREARS_DT, 
 
        ffc.nsf_amount aS NSF_AC_AMT, 
        ffc.nsf_cost as NSF_COST_AC_AMT, 
        ffc.default_interest as PENALTY_INTEREST_AC_AMT, 
        odl.overdraft_limit as OVERDRAFT_LIMIT_AC_AMT, 
        odl.effective_date as overdraft_limit_start_dt, 
        odl.expiry_date as OVERDRAFT_LIMIT_END_DT, 
        ffc.available_amount as AVAILABLE_AC_AMT, 
        ffc.disposable_amount as DISPOSABLE_AC_AMT, 
        ffc.latest_booking_date as LAST_TRANSACTION_DT, 
        owners_latest_booking_date as LATEST_MOVEMENT_DT, 
        dagg.current_year_withdrawal_count as YTD_WITHDRAWAL_CNT, 
        dagg.current_year_withdrawal as YTD_WITHDRAWAL_AC_AMT, 
        dagg.current_year_deposit_count as YTD_DEPOSIT_CNT, 
        dagg.current_year_deposit as YTD_DEPOSIT_TURNOVER_AC_AMT, 
        ig_base.deposit_date as IG_BINDING_DT, 
        ig_base.release_date as IG_RELEASE_DT, 
        
        ffc.disposable_amount, 
        ffc.accrued_interest_margin, 
        ffc.accrued_debt_interest_margin, 
        ffc.collection_date, 
        ffc.nsf_transaction_count, 
        ffc.suspension_transaction_amount, 
        ffc.suspension_amount, 
        lc.LOAN_TYPE_CD 
    from 
    agreements a left join tmp_agreements_id a_id on a.agreement_id=a_id.host_agreement_num and agr_source_system_cd=29 
    left join deposit_miscellaneous dm on a.agreement_pid = dm.agreement_pid and a.reference_date = dm.reference_date 
    left join cx_value_date_rule vdr  on a.value_date_rule_id = vdr.host_value_date_rule_num 
    left join products p  on a.product_id = p.product_id and a.reference_date = p.reference_date 
    left join deposit_agreements da on a.agreement_pid = da.agreement_pid and a.reference_date = da.reference_date 
    left join time_deposit_rules tdr on tdr.time_deposit_rule_id = da.time_deposit_rule_id and da.reference_date = tdr.reference_date 
     
    left join TERM_DEPOSIT term_d on term_d.agreement_pid = a.agreement_pid and term_d.reference_date = a.reference_date 
    left join financial_frequent_changes ffc on ffc.agreement_pid = a.agreement_pid and ffc.reference_date = a.reference_date 
    left join agr_interest_freq_changes dep_ifc on dep_ifc.agreement_pid = a.agreement_pid and dep_ifc.interest_role_id = 1 
                                                   and dep_ifc.reference_date = a.reference_date 
    left join agr_interest_freq_changes loan_ifc on loan_ifc.agreement_pid = a.agreement_pid and loan_ifc.interest_role_id = 2 
                                                    and loan_ifc.reference_date = a.reference_date 
    left join overdraft_limits odl on odl.agreement_pid = a.agreement_pid and odl.status_date between odl.effective_date and odl.expiry_date 
                                      and a.reference_date = odl.reference_date 
    left join deposit_aggregates dagg on dagg.agreement_pid = a.agreement_pid and dagg.reference_date = a.reference_date 
    left join currencies c on a.currency_id = c.currency_id and a.reference_date = c.reference_date 
    left join 
    ( 
        select agreement_pid,party_number,pr.reference_date 
        from agreement_party_relations pr 
        join parties p on p.party_id = pr.party_id and p.reference_date = pr.reference_date and pr.party_role_id = 1 
    ) ag_owner on ag_owner.agreement_pid = a.agreement_pid and ag_owner.reference_date = a.reference_date 
 
    left join  bifrost.stg_sap_mdm_bp_dw_is bp  on bp.ssn = ag_owner.party_number 
 
    
    left join ( 
        select 
            branch_id||ledger||account_number as host_agreement_num, 
            release_date, 
            duration, 
            nvl(add_months(release_date,-duration),reference_date) as deposit_date, 
            reference_date 
         from bifrost.stg_rbdep_dw_ig_base_arc 
    ) ig_base on a.agreement_id = ig_base.host_agreement_num and a.reference_date = ig_base.reference_date 
 
    
    left join ( 
        select 
            SUBSTR('0000'||BANKI,-4,4)||HOFUDBOK||SUBSTR('000000'||REIKNINGSNUMER,-6,6) AS HOST_AGREEMENT_NUM, 
            utils.InterestRate('5','S0',NULL,'LIABILITY','26',reference_date) - BP_FRADRAG/100 AS CP_DEPOSIT_INTEREST_RT, 
            utils.InterestRate('5','S0',NULL,'ASSET','26',reference_date) + BP_ALAG/100 AS CP_LOAN_INTEREST_RT, 
            REFERENCE_DATE 
        from bifrost.stg_sjodsp_vxalag_ah_saga_arc a 
        where reference_date = a.reference_date 
    ) sjodsp on a.agreement_id = sjodsp.host_agreement_num  and a.reference_date = sjodsp.reference_date 
 
    left join loan_type_cache2 lc 
    on lc.source_system_cd = utils.SourceSystemCd(p.code,substr(a.agreement_id,7,1),a.branch,a.source_system_code) 
    and lc.host_product_num = case when utils.SourceSystemCd(p.code,substr(a.agreement_id,7,1),a.branch,a.source_system_code) &lt;> 29 then substr(p.code,0,2) else p.code end 
), 
DEPOSIT_AGREEMENTS_W_Level1 AS 
( 
    select 
        reference_date, 
        IG_BINDING_DT, 
        IG_RELEASE_DT, 
        AGREEMENT_ID, 
        CAST(HOST_AGREEMENT_NUM AS VARCHAR(50)) AS HOST_AGREEMENT_NUM, 
        SOURCE_SYSTEM_CD, 
        utils.ProductFeature(PRODUCT_ID,PV_FEATURE_GROUP_ID,'FINANCIAL_AGREEMENT_TYPE_CD') AS FINANCIAL_AGREEMENT_TYPE_CD, 
        case when financial_agreement_subtype_cd is null then utils.ProductFeature(PRODUCT_ID,PV_FEATURE_GROUP_ID,'FINANCIAL_AGREEMENT_SUBTYPE_CD') else financial_agreement_subtype_cd end AS FINANCIAL_AGREEMENT_SUBTYPE_CD, 
        utils.ProductFeature(PRODUCT_ID,PV_FEATURE_GROUP_ID,'BINDING') AS BINDING_FEATURE_CD, 
        utils.ProductFeature(PRODUCT_ID,PV_FEATURE_GROUP_ID,'NOTICE') AS NOTICE_FEATURE_CD, 
        CASE WHEN HOST_PRODUCT_NUM = '80' or legal_counsel_code &lt;> '  ' THEN 'YES' ELSE 'NO' END AS LEGAL_COLLECTION_IND, 
        legal_counsel_code, 
        PAWNED_IND, 
        withdrawal_blocked_ind, 
        ACTIVE_IND, 
        CAST(branch AS VARCHAR(4)) AS BRANCH_CD, 
        ENTITY AS PROFIT_CENTER_CD, 
        VALUE_DT, 
        OPEN_DT, 
        CLOSE_DT, 
        OWNER_PARTY_ID, 
        OWNER_PARTY_SSN, 
        CURRENCY_CD, 
        CURRENCY_RT, 
        CURRENCY_TYPE_CD, 
        HOST_PRODUCT_NUM, 
        PRODUCT_ID, 
        utils.productName(product_id) product_name_txt, 
        designated_name designated_account_name_txt, 
        PV_FEATURE_GROUP_ID, 
        LOAN_TYPE_CD as LOAN_TYPE, 
        ASSET_LIABILITY_CD, 
        
        
        
 
        utils.ProductFeature(PRODUCT_ID,PV_FEATURE_GROUP_ID,'DAY_COUNT_BASIS_CD') AS DAY_COUNT_BASIS_CD, 
        VALUE_DATE_RULE_CD, 
        utils.ProductFeature(PRODUCT_ID,PV_FEATURE_GROUP_ID,'PRICING_METHOD_SUBTYPE_CD') AS PRICING_METHOD_SUBTYPE_CD, 
        utils.ProductFeature(PRODUCT_ID,PV_FEATURE_GROUP_ID,'TIER_NO') AS TIER_NO, 
        
        
        
        
 
        
        (select 
        case when host_product_num in ('27','44','42','62','73','92','95','96','97','98','68') then 
            utils.InterestRate( 
                source_system_cd, 
                host_product_num, 
                utils.ProductFeature(PRODUCT_ID,PV_FEATURE_GROUP_ID,'TIER_NO'), 
                'LIABILITY', 
                substr(host_agreement_num,5,2), 
                CASE WHEN host_product_num IN ('95','96','97','98') THEN open_dt else reference_date end 
            ) 
        when host_product_num = 'H0' then 
            nvl(CP_DEPOSIT_INTEREST_RT,DEPOSIT_INTEREST_RT) 
        else 
            DEPOSIT_INTEREST_RT 
        end 
        from dual) AS DEPOSIT_INTEREST_RT, 
 
        
        (select case when host_product_num in ('27','44','42','62','73','92','95','96','97','98','68') then 
            utils.InterestRate( 
                source_system_cd, 
                host_product_num, 
                cast(utils.ProductFeature(PRODUCT_ID,PV_FEATURE_GROUP_ID,'TIER_NO') as number), 
                'ASSET', 
                substr(host_agreement_num,5,2), 
                CASE WHEN host_product_num IN ('27','95','96','97','98') THEN open_dt else reference_date end 
            ) 
        when host_product_num = 'H0' then 
             nvl(CP_LOAN_INTEREST_RT,LOAN_INTEREST_RT) 
        else 
            LOAN_INTEREST_RT 
        end from dual) as LOAN_INTEREST_RT, 
 
        (select case when ASSET_LIABILITY_CD = 'ASSET' THEN 
           case when host_product_num in ('27','44','42','62','73','92','95','96','97','98','68') then 
            utils.InterestRate( 
                source_system_cd, 
                host_product_num, 
                cast(utils.ProductFeature(PRODUCT_ID,PV_FEATURE_GROUP_ID,'TIER_NO') as number), 
                'ASSET', 
                substr(host_agreement_num,5,2), 
                CASE WHEN host_product_num IN ('95','96','97','98') THEN open_dt else reference_date end 
            ) 
            when host_product_num = 'H0' then 
                nvl(CP_LOAN_INTEREST_RT,LOAN_INTEREST_RT) 
            else 
                LOAN_INTEREST_RT 
            end 
         else 
          case when host_product_num in ('27','44','42','62','73','92','95','96','97','98','68') then 
            utils.InterestRate( 
                source_system_cd, 
                host_product_num, 
                cast(utils.ProductFeature(PRODUCT_ID,PV_FEATURE_GROUP_ID,'TIER_NO') as number), 
                'LIABILITY', 
                substr(host_agreement_num,5,2), 
                CASE WHEN host_product_num IN ('95','96','97','98') THEN open_dt else reference_date end 
            ) 
            when host_product_num = 'H0' then 
                nvl(CP_DEPOSIT_INTEREST_RT,DEPOSIT_INTEREST_RT) 
            else 
                DEPOSIT_INTEREST_RT 
            end 
        end from dual) as INTEREST_RT, 
 
        
        (select utils.baserate(SOURCE_SYSTEM_CD,HOST_PRODUCT_NUM,CURRENCY_CD,ASSET_LIABILITY_CD,case when host_product_num in ('95','96','97','98') then open_dt else reference_date end) from dual) as BASE_RT, 
        (select utils.fundingmarginrate(SOURCE_SYSTEM_CD,HOST_PRODUCT_NUM,CURRENCY_CD,BINDING_TIME_PERIOD_CNT,ASSET_LIABILITY_CD,NVL(IG_BINDING_DT,case when host_product_num in ('95','96','97','98') then open_dt else reference_date end)) from dual) as FUNDING_MARGIN_RT, 
 
        INDEXATION_RT, 
        utils.ProductFeature(PRODUCT_ID,PV_FEATURE_GROUP_ID,'INTEREST_FIX_FLO') AS INTEREST_FIX_FLO_CD, 
        utils.ProductFeature(PRODUCT_ID,PV_FEATURE_GROUP_ID,'INTEREST_BEFORE_AFTER') AS INTEREST_BEFORE_AFTER_CD, 
        utils.ProductFeature(PRODUCT_ID,PV_FEATURE_GROUP_ID,'INTEREST_COMPOUNDING_PERIOD_TYPE_CD') AS INT_COMPOUNDING_PERIOD_TYPE_CD, 
 
        CURRENCY_RT * ACCRUED_DEPOSIT_INT_AC_AMT as ACCRUED_DEPOSIT_INT_AMT, 
        ACCRUED_DEPOSIT_INT_AC_AMT, 
        CURRENCY_RT * ACCRUED_LOAN_INT_AC_AMT as ACCRUED_LOAN_INT_AMT, 
        ACCRUED_LOAN_INT_AC_AMT, 
        ACCRUED_INDEXATION_AC_AMT, 
        ACCRUED_INDEXATION_AC_AMT as ACCRUED_INDEXATION_AMT, 
        CURRENCY_RT * BALANCE_SRC_AC_AMT as  BALANCE_SRC_AMT, 
        BALANCE_SRC_AC_AMT, 
        CURRENCY_RT * BALANCE_AC_AMT as BALANCE_AMT, 
        BALANCE_AC_AMT, 
        IN_ARREARS_AC_AMT, 
        CURRENCY_RT * IN_ARREARS_AC_AMT as IN_ARREARS_AMT, 
        DAYS_IN_ARREARS_CNT, 
        IN_ARREARS_DT, 
        NSF_AC_AMT, 
        CURRENCY_RT * NSF_AC_AMT as NSF_AMT, 
        NSF_COST_AC_AMT, 
        CURRENCY_RT * NSF_COST_AC_AMT as NSF_COST_AMT, 
        PENALTY_INTEREST_AC_AMT, 
        CURRENCY_RT * PENALTY_INTEREST_AC_AMT as PENALTY_INTEREST_AMT, 
        CURRENCY_RT * OVERDRAFT_LIMIT_AC_AMT as OVERDRAFT_LIMIT_AMT, 
        OVERDRAFT_LIMIT_AC_AMT, 
        overdraft_limit_start_dt, 
        OVERDRAFT_LIMIT_END_DT, 
        CURRENCY_RT * AVAILABLE_AC_AMT as AVAILABLE_AMT, 
        AVAILABLE_AC_AMT, 
        CURRENCY_RT * DISPOSABLE_AC_AMT as DISPOSABLE_AMT, 
        DISPOSABLE_AC_AMT, 
        (select CURRENCY_RT * utils.ExposureAmt(BALANCE_AC_AMT,IN_ARREARS_AC_AMT, ACCRUED_DEPOSIT_INT_AC_AMT,ACCRUED_INDEXATION_AC_AMT) from dual) as EXPOSURE_AMT, 
        (select utils.ExposureAmt(BALANCE_AC_AMT,IN_ARREARS_AC_AMT,ACCRUED_DEPOSIT_INT_AC_AMT,ACCRUED_INDEXATION_AC_AMT) from dual) as EXPOSURE_AC_AMT, 
        LAST_TRANSACTION_DT, 
        LATEST_MOVEMENT_DT, 
        YTD_WITHDRAWAL_CNT, 
        YTD_WITHDRAWAL_AC_AMT, 
        YTD_DEPOSIT_CNT, 
        YTD_DEPOSIT_TURNOVER_AC_AMT, 
        isb_currency_rt 
    from DEPOSIT_AGREEMENTS_W_Level0 
) 
 
select 
    REFERENCE_DATE, 
    AGREEMENT_ID, 
    HOST_AGREEMENT_NUM, 
    substr(HOST_AGREEMENT_NUM,1,4)|| '-'||substr(HOST_AGREEMENT_NUM,5,2)||'-'|| substr(HOST_AGREEMENT_NUM,7,6) as agreement_name_txt, 
    SOURCE_SYSTEM_CD, 
    FINANCIAL_AGREEMENT_TYPE_CD, 
    FINANCIAL_AGREEMENT_SUBTYPE_CD, 
    BINDING_FEATURE_CD, 
    NOTICE_FEATURE_CD, 
    utils.TermFeatureDetail(BINDING_FEATURE_CD).TimePeriodCd as BINDING_TIME_PERIOD_CD, 
    utils.TermFeatureDetail(BINDING_FEATURE_CD).ToTimePeriodCnt as BINDING_TIME_PERIOD_CNT, 
    utils.TermFeatureDetail(NOTICE_FEATURE_CD).TimePeriodCd as NOTICE_TIME_PERIOD_CD, 
    utils.TermFeatureDetail(NOTICE_FEATURE_CD).ToTimePeriodCnt as NOTICE_TIME_PERIOD_CNT, 
    LEGAL_COLLECTION_IND, 
    legal_counsel_code, 
    PAWNED_IND, 
    withdrawal_blocked_ind, 
    ACTIVE_IND, 
    BRANCH_CD, 
    PROFIT_CENTER_CD, 
    VALUE_DT, 
    OPEN_DT, 
    CLOSE_DT, 
    CASE WHEN SOURCE_SYSTEM_CD = '4' THEN IG_RELEASE_DT ELSE 
        utils.MaturityDt( 
        CASE WHEN SUBSTR(utils.ProductFeature(PRODUCT_ID,PV_FEATURE_GROUP_ID,'BINDING'),-2,2)='YO' THEN utils.PartyBirthdayDt(OWNER_PARTY_SSN)-1 ELSE OPEN_DT END, 
        reference_date, 
        utils.TermFeatureDetail(BINDING_FEATURE_CD), 
        utils.TermFeatureDetail(NOTICE_FEATURE_CD) 
    ) END AS ORIGINAL_MATURITY_DT, 
    OWNER_PARTY_ID, 
    OWNER_PARTY_SSN, 
    CURRENCY_CD, 
    CURRENCY_RT, 
    isb_currency_rt, 
    CURRENCY_TYPE_CD, 
    HOST_PRODUCT_NUM, 
    PRODUCT_ID, 
    PRODUCT_NAME_TXT, 
    DESIGNATED_ACCOUNT_NAME_TXT, 
    PV_FEATURE_GROUP_ID, 
    LOAN_TYPE, 
    DAY_COUNT_BASIS_CD, 
    VALUE_DATE_RULE_CD, 
    PRICING_METHOD_SUBTYPE_CD, 
    TIER_NO, 
    DEPOSIT_INTEREST_RT, 
    LOAN_INTEREST_RT, 
    INTEREST_RT, 
    BASE_RT, 
    FUNDING_MARGIN_RT, 
    
    CASE WHEN ASSET_LIABILITY_CD = 'ASSET' THEN LOAN_INTEREST_RT - (BASE_RT+FUNDING_MARGIN_RT) ELSE BASE_RT + FUNDING_MARGIN_RT - DEPOSIT_INTEREST_RT END AS BUSINESS_UNIT_MARGIN_RT, 
    CASE WHEN ASSET_LIABILITY_CD = 'ASSET' THEN LOAN_INTEREST_RT - BASE_RT ELSE BASE_RT - DEPOSIT_INTEREST_RT END AS TOTAL_MARGIN_RT, 
    INDEXATION_RT, 
    INTEREST_FIX_FLO_CD, 
    INTEREST_BEFORE_AFTER_CD, 
    INT_COMPOUNDING_PERIOD_TYPE_CD, 
    ACCRUED_DEPOSIT_INT_AMT, 
    ACCRUED_DEPOSIT_INT_AC_AMT, 
    ACCRUED_LOAN_INT_AMT, 
    ACCRUED_LOAN_INT_AC_AMT, 
    ACCRUED_INDEXATION_AC_AMT, 
    ACCRUED_INDEXATION_AMT, 
    BALANCE_SRC_AMT, 
    BALANCE_SRC_AC_AMT, 
    BALANCE_AMT, 
    BALANCE_AC_AMT, 
    IN_ARREARS_AC_AMT, 
    IN_ARREARS_AMT, 
    DAYS_IN_ARREARS_CNT, 
    IN_ARREARS_DT, 
    NSF_AC_AMT, 
    NSF_AMT, 
    NSF_COST_AC_AMT, 
    NSF_COST_AMT, 
    PENALTY_INTEREST_AC_AMT, 
    PENALTY_INTEREST_AMT, 
    OVERDRAFT_LIMIT_AMT, 
    OVERDRAFT_LIMIT_AC_AMT, 
    overdraft_limit_start_dt, 
    OVERDRAFT_LIMIT_END_DT, 
    AVAILABLE_AMT, 
    AVAILABLE_AC_AMT, 
    DISPOSABLE_AMT, 
    DISPOSABLE_AC_AMT, 
    EXPOSURE_AMT, 
    EXPOSURE_AC_AMT, 
    LAST_TRANSACTION_DT, 
    LATEST_MOVEMENT_DT, 
    YTD_WITHDRAWAL_CNT, 
    YTD_WITHDRAWAL_AC_AMT, 
    YTD_DEPOSIT_CNT, 
    YTD_DEPOSIT_TURNOVER_AC_AMT 
from DEPOSIT_AGREEMENTS_W_Level1 
where reference_date = date'2018-02-28'</uniqueName>
</TableSettings>
